{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","togglemode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","Event","target","backgroundColor","rows","newText","showalert","toLocaleLowerCase","split","length","App","setmode","_useState3","_useState4","setalert","message","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"mMAiBeA,MAff,SAAeC,GAKX,OACIA,EAAMC,OAASC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,eAAAC,OAAiBN,EAAMC,MAAMM,KAA7B,gCAAiEC,KAAK,SAC/FN,EAAAC,EAAAC,cAAA,kBANW,SAACK,GAChB,IAAMC,EAAOD,EAAKE,cAClB,OAAOD,EAAME,OAAO,GAAGC,cAAgBH,EAAMI,MAAM,GAIpCC,CAAYf,EAAMC,MAAMM,MAAnC,KADW,KAC2CP,EAAMC,MAAMe,MCL/D,SAASC,EAAOjB,GAC7B,OACGE,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kCAAAC,OAAoCN,EAAMkB,KAA1C,QAAAZ,OAAqDN,EAAMkB,OAC1EhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAec,KAAK,KAAKnB,EAAMoB,OAC5ClB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBE,KAAK,SAASc,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAC1LvB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BqB,GAAG,0BAC3CxB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBsB,eAAa,OAAOR,KAAK,KAAxD,UAUJjB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,+BAAAC,OAA8C,UAAbN,EAAMkB,KAAe,OAAO,UACzEhB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBuB,QAAS5B,EAAM6B,WAAYtB,KAAK,WAAWC,KAAK,SAASkB,GAAG,2BAChGxB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmByB,QAAQ,0BAA5C,iBCzBO,SAASC,EAAS/B,GAC7B,IADoCgC,EAiBdC,mBAAS,IAjBKC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAiB/BK,EAjB+BH,EAAA,GAiBzBI,EAjByBJ,EAAA,GAkBtC,OACIhC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KACFrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYmC,MAAO,CAACC,MAAoB,UAAbzC,EAAMkB,KAAe,QAAQ,UACnEhB,EAAAC,EAAAC,cAAA,cAAMJ,EAAM0C,QAAZ,KACAxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAesC,MAAON,EAAMO,SAV7B,SAACC,GAEpBP,EAAQO,EAAMC,OAAOH,QAQqDH,MAAO,CAACO,gBAA8B,SAAb/C,EAAMkB,KAAc,OAAO,QAAUuB,MAAmB,UAAbzC,EAAMkB,KAAe,QAAQ,SAAWQ,GAAG,UAAUsB,KAAK,OAExM9C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBuB,QAxBvB,WAElB,IAAIqB,EAAUZ,EAAKxB,cACnByB,EAAQW,GACRjD,EAAMkD,UAAU,wBAAwB,aAoBxC,wBACAhD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBuB,QAnBtB,WAEnB,IAAIqB,EAAUZ,EAAKc,oBACnBb,EAAQW,GACRjD,EAAMkD,UAAU,wBAAwB,aAexC,yBAEJhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYmC,MAAO,CAACC,MAAoB,SAAbzC,EAAMkB,KAAc,QAAQ,UACpEhB,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SAAIiC,EAAKe,MAAM,KAAKC,OAApB,cAAuChB,EAAKgB,OAA5C,eACAnD,EAAAC,EAAAC,cAAA,SAAI,KAAQiC,EAAKe,MAAM,KAAKC,OAA5B,iBACAnD,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAIiC,KC6BKiB,MAjDf,WAAe,IAAAtB,EACWC,mBAAS,QADpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNd,EADMgB,EAAA,GACAqB,EADArB,EAAA,GAAAsB,EAEavB,mBAAS,MAFtBwB,EAAAtB,OAAAC,EAAA,EAAAD,CAAAqB,EAAA,GAENvD,EAFMwD,EAAA,GAECC,EAFDD,EAAA,GAIPP,EAAY,SAACS,EAASpD,GAC1BmD,EAAS,CACP1C,IAAK2C,EACLpD,KAAMA,IAERqD,WAAW,WACTF,EAAS,OACR,OAeL,OACExD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KAGErC,EAAAC,EAAAC,cAACa,EAAD,CAAQG,MAAM,YAAYF,KAAMA,EAAMW,WAhBvB,WACJ,UAATX,GACFqC,EAAQ,QACRM,SAASC,KAAKtB,MAAMO,gBAAkB,UACtCG,EAAU,6BAA8B,aAGxCK,EAAQ,SACRM,SAASC,KAAKtB,MAAMO,gBAAkB,QACtCG,EAAU,8BAA+B,eAQzChD,EAAAC,EAAAC,cAAC2D,EAAD,CAAO9D,MAAOA,IACdC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAQTH,EAAAC,EAAAC,cAAC2B,EAAD,CAAUmB,UAAWA,EAAWR,QAAQ,6BAA6BxB,KAAMA,OC3CxE8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWjB,SAASkB,eAAe,SACpDC,OACH9E,EAAAC,EAAAC,cAACF,EAAAC,EAAM8E,WAAP,KACE/E,EAAAC,EAAAC,cAAC8E,EAAD,QAOJlB","file":"static/js/main.62a42ab8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower= word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n        }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong> { capitalize (props.alert.type)} </strong> :{props.alert.msg}\r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Alert","import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n// import PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n     <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-aut mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">About</a>\r\n        </li> */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode===\"light\"?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\n","import React, {useState}  from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleupclick = ()=>{\r\n        // console.log(\"uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showalert(\"coverted to Uppercase\",\"success\");\r\n    }\r\n    const handlelowclick = ()=>{\r\n        // console.log(\"uppercase was clicked\" + text);\r\n        let newText = text.toLocaleLowerCase();\r\n        setText(newText);\r\n        props.showalert(\"coverted to Lowercase\",\"success\");\r\n    }\r\n    const handleOnChange = (Event)=>{\r\n        // console.log(\"on change\");\r\n        setText(Event.target.value);\r\n    }\r\n  const [text, setText] = useState('');\r\n  return (\r\n      <>\r\n    <div className='container' style={{color: props.mode===\"light\"?'black':'white'}}>\r\n        <h1> {props.heading} </h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode===\"dark\"?'grey':'white' , color:props.mode===\"light\"?'black':'white' }} id=\" mybox \" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleupclick}>convert to uppercase</button> \r\n        <button className=\"btn btn-primary mx-2\" onClick={handlelowclick}>convert to lowercase</button> \r\n    </div>\r\n    <div className=\"container\" style={{color: props.mode===\"dark\"?'white':'black'}}>\r\n      <h1>your text summary</h1>\r\n      <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").length} minutes read</p>\r\n      <h3>preview</h3>\r\n      <p>{text}</p>\r\n    </div>\r\n      </>\r\n  )\r\n}\r\n","// import { type } from '@testing-library/user-event/dist/type';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport './App.css';\r\nimport Alert from './components/Alert';\r\nimport Navbar from './components/Navbar';\r\n// import About from './components/About';\r\nimport TextForm from './components/TextForm';\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Link\r\n// } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [mode, setmode] = useState('dark');\r\n  const [alert, setalert] = useState(null);\r\n\r\n  const showalert = (message, type) => {\r\n    setalert({\r\n      msg: message,\r\n      type: type\r\n    })\r\n    setTimeout(() => {\r\n      setalert(null);\r\n    }, 1500);\r\n  }\r\n\r\n  const togglemode = () => {\r\n    if (mode === 'light') {\r\n      setmode('dark');\r\n      document.body.style.backgroundColor = '#28292e';\r\n      showalert(\"Dark mode has been enabled\", \"success\");\r\n    }\r\n    else {\r\n      setmode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n      showalert(\"Light mode has been enabled\", \"success\");\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      {/* <Router> */}\r\n      {/* <Navbar title=\"TextUtils\" aboutText= \"About TextUtils\"/> */}\r\n      <Navbar title='TextUtils' mode={mode} togglemode={togglemode} />\r\n      <Alert alert={alert} />\r\n      <div className='container my-3'>\r\n            {/* ffhfhgfhdhg  */}\r\n        {/* <Switch>\r\n          <Route exact path=\"/about\">\r\n            <About />\r\n          </Route>\r\n\r\n          <Route exact path=\"/\"> */}\r\n            <TextForm showalert={showalert} heading=\"Enter your text to analyze\" mode={mode} />\r\n          {/* </Route> */}\r\n        {/* </Switch> */}\r\n      </div>\r\n      {/* </Router> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}